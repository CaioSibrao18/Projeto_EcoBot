// Mocks generated by Mockito 5.4.6 from annotations
// in ecoquest/test/mocks/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:convert' as _i6;
import 'dart:typed_data' as _i7;

import 'package:ecoquest/pages/games/easytrash_logic.dart' as _i3;
import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0 extends _i1.SmartFake implements _i2.Response {
  _FakeResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_1 extends _i1.SmartFake
    implements _i2.StreamedResponse {
  _FakeStreamedResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [EasyTrashGameLogic].
///
/// See the documentation for Mockito's code generation for more information.
class MockEasyTrashGameLogic extends _i1.Mock
    implements _i3.EasyTrashGameLogic {
  MockEasyTrashGameLogic() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<Map<String, dynamic>> get trashItems =>
      (super.noSuchMethod(
            Invocation.getter(#trashItems),
            returnValue: <Map<String, dynamic>>[],
          )
          as List<Map<String, dynamic>>);

  @override
  int get currentItemIndex =>
      (super.noSuchMethod(Invocation.getter(#currentItemIndex), returnValue: 0)
          as int);

  @override
  int get correctAnswers =>
      (super.noSuchMethod(Invocation.getter(#correctAnswers), returnValue: 0)
          as int);

  @override
  set currentItemIndex(int? _currentItemIndex) => super.noSuchMethod(
    Invocation.setter(#currentItemIndex, _currentItemIndex),
    returnValueForMissingStub: null,
  );

  @override
  set correctAnswers(int? _correctAnswers) => super.noSuchMethod(
    Invocation.setter(#correctAnswers, _correctAnswers),
    returnValueForMissingStub: null,
  );

  @override
  set lastResultText(String? _lastResultText) => super.noSuchMethod(
    Invocation.setter(#lastResultText, _lastResultText),
    returnValueForMissingStub: null,
  );

  @override
  set lastResultBin(String? _lastResultBin) => super.noSuchMethod(
    Invocation.setter(#lastResultBin, _lastResultBin),
    returnValueForMissingStub: null,
  );

  @override
  set lastResultCorrect(bool? _lastResultCorrect) => super.noSuchMethod(
    Invocation.setter(#lastResultCorrect, _lastResultCorrect),
    returnValueForMissingStub: null,
  );

  @override
  void checkAnswer(String? selectedBin) => super.noSuchMethod(
    Invocation.method(#checkAnswer, [selectedBin]),
    returnValueForMissingStub: null,
  );

  @override
  void nextItem() => super.noSuchMethod(
    Invocation.method(#nextItem, []),
    returnValueForMissingStub: null,
  );

  @override
  bool isGameFinished() =>
      (super.noSuchMethod(
            Invocation.method(#isGameFinished, []),
            returnValue: false,
          )
          as bool);

  @override
  void resetGame() => super.noSuchMethod(
    Invocation.method(#resetGame, []),
    returnValueForMissingStub: null,
  );

  @override
  String getCurrentImage() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentImage, []),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#getCurrentImage, []),
            ),
          )
          as String);

  @override
  String getCorrectBinForCurrentItem() =>
      (super.noSuchMethod(
            Invocation.method(#getCorrectBinForCurrentItem, []),
            returnValue: _i4.dummyValue<String>(
              this,
              Invocation.method(#getCorrectBinForCurrentItem, []),
            ),
          )
          as String);

  @override
  int getTotalItems() =>
      (super.noSuchMethod(Invocation.method(#getTotalItems, []), returnValue: 0)
          as int);

  @override
  int getCurrentProgress() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentProgress, []),
            returnValue: 0,
          )
          as int);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i2.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i5.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i5.Future<_i2.Response>);

  @override
  _i5.Future<_i2.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i5.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i5.Future<_i2.Response>);

  @override
  _i5.Future<_i2.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i6.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i5.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i5.Future<_i2.Response>);

  @override
  _i5.Future<_i2.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i6.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i5.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i5.Future<_i2.Response>);

  @override
  _i5.Future<_i2.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i6.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i5.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i5.Future<_i2.Response>);

  @override
  _i5.Future<_i2.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i6.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i5.Future<_i2.Response>.value(
              _FakeResponse_0(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i5.Future<_i2.Response>);

  @override
  _i5.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i5.Future<String>.value(
              _i4.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i5.Future<String>);

  @override
  _i5.Future<_i7.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i5.Future<_i7.Uint8List>.value(_i7.Uint8List(0)),
          )
          as _i5.Future<_i7.Uint8List>);

  @override
  _i5.Future<_i2.StreamedResponse> send(_i2.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i5.Future<_i2.StreamedResponse>.value(
              _FakeStreamedResponse_1(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i5.Future<_i2.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}
